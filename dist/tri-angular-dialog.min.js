/*!
 * triAngular Dialog
 */
!function(a){"use strict";a.directive("triDialogMask",["$animate","triDialogConfig","triDialogManager",function(a,b,c){var d=function(d,e,f,g,h){var i=e.parent(),j=null,k=null,l=function(a){a.css("z-index",b.baseZindex+2*c.dialogs.length-1)},m=function(){c.hasAny(g.namespace)?k?l(k):k=h(function(b){a.enter(b,i),l(b),j&&(j.remove(),j=null)}):k&&(a.leave(k,function(){j=null}),j=k,k=null)};d.$on(g.namespace+".dialog.open",m),d.$on(g.namespace+".dialog.closing",m),a.leave(k)};return{link:d,priority:100,require:"^triDialogRoot",restrict:"A",terminal:!0,transclude:"element"}}]),a.directive("triDialogMask",["triDialogManager","triDialogConfig",function(a,b){var c=function(a,c,d,e){c.addClass(e.maskClass+" "+b.maskClass)},d=function(b,c,d,e){c.on("click",function(){var c=a.getUpperDialog();c&&!c.modal&&(e.broadcast("close",c),b.$digest())})};return{link:{pre:c,post:d},priority:-100,require:"^triDialogRoot",restrict:"A"}}]),a.directive("triDialogRoot",["$compile","$rootScope","$document","$animate","triDialogConfig","triDialogManager",function(a,b,c,d,e,f){c.on("keydown keypress",function(a){var c;27===a.which&&f.dialogs.length&&(c=f.getUpperDialog(),b.$broadcast(c.namespace+".dialog.close",c),b.$digest())});var g=function(a,b,c){return this.namespace=b.triDialogRoot||c.mainNamespace,angular.extend(this,{maskClass:this.namespace+"-"+c.maskClass,rootClass:this.namespace+"-"+c.rootClass,broadcast:function(b,c){a.$broadcast(this.namespace+".dialog."+b,c)},listen:function(b,c){a.$on(this.namespace+".dialog."+b,c)}})},h=function(b,c,e,g){g.listen("open",function(e,f){var h=angular.element('<section tri:dialog="'+f.label+'"></section>');d.enter(h,c.addClass(g.rootClass)),a(h)(b),!b.$$phase&&b.$digest()}),g.listen("closing",function(){!f.hasAny(g.namespace)&&c.removeClass(g.rootClass)})},i=function(a){a.append("<div tri:dialog-mask></div>")};return{controller:["$scope","$attrs","triDialogConfig",g],link:h,require:"triDialogRoot",restrict:"A",template:i}}]),a.directive("triDialog",["$http","$animate","$compile","$controller","$templateCache","triDialogManager","triDialogConfig","triDialogUtilities",function(a,b,c,d,e,f,g,h){var i=function(g,h,i,j){var k=f.dialogs[i.triDialog],l={$data:k.data,$scope:g},m=function(a,b,c){var e;c.controller&&(e=d(c.controller,l),b.data("$ngControllerController",e),b.children().data("$ngControllerController",e),c.controllerAs&&(g[c.controllerAs]=e)),a(g)};a.get(k.templateUrl,{cache:e}).success(function(a){h.html(a),m(c(h.contents()),h,k),g.$emit("$triNgDialogTemplateLoaded")}).error(function(){g.$emit("$triNgDialogTemplateError")}),g.$emit("$triNgDialogTemplateRequested"),g.closeClick=function(){j.broadcast("close",k)},g.$on(k.namespace+".dialog.close",function(a,c){c.label==k.label&&(b.leave(h,function(){g.$destroy(),k.destroy(),h=k=null}),f.unRegisterDialog(k.label),j.broadcast("closing",c))})},j=function(a,b){var c=f.dialogs[b.triDialog];return a.addClass(g.dialogClass+" "+c.dialogClass).css({zIndex:g.baseZindex+2*(c.label+1),top:h.getTopOffset(c.topOffset)}),i};return{compile:j,require:"^triDialogRoot",restrict:"A",scope:!0}}]),a.constant("triDialogConfig",{baseZindex:3e3,rootClass:"dialog-root",maskClass:"dialog-mask",dialogClass:"dialog",mainNamespace:"main"}),a.factory("triDialogData",["$log","triDialogConfig",function(a,b){var c=function(){return angular.extend(this,{controller:null,controllerAs:null,dialogClass:"",topOffset:null,modal:!1,namespace:b.mainNamespace,templateUrl:null})};return angular.extend(c.prototype,{_updateDialogConfigData:function(b,c){return b.templateUrl||a.error(new Error('triNgDialog.DialogData() - initialData must contain defined "templateUrl"')),angular.extend(this,b,{data:c})},destroy:function(){var a;for(a in this)this.hasOwnProperty(a)&&delete this[a]}}),function(a,b){return(new c)._updateDialogConfigData(a,b)}}]),a.provider("triDialogManager",["triDialogConfig",function(a){var b=function(a,b,c){var d=function(){return angular.extend(this,{dialogs:[]})};return angular.extend(d.prototype,{hasAny:function(a){return this.dialogs.some(function(b){return b.namespace===a})},getUpperDialog:function(){var a=this.dialogs.length;return a>0&&this.dialogs[a-1]},registerDialog:function(a){return a.label=this.dialogs.push(a)-1,a},unRegisterDialog:function(a){var b=this.dialogs[a];return b&&b.label===a?(this.dialogs.splice(a,1),!0):!1},triggerDialog:function(d,e){return d=d||{},a.$emit((d.namespace||b.mainNamespace)+".dialog.open",this.registerDialog(c(d,e))),this}}),new d};return{config:function(b){return angular.extend(a,b),this},$get:["$rootScope","triDialogConfig","triDialogData",b]}}]),a.service("triDialogUtilities",[function(){var a=document.body,b=document.documentElement,c=function(){};return angular.extend(c.prototype,{getViewportSize:function(c){return c.isW3C?function(){return{width:window.innerWidth,height:window.innerHeight}}:c.isIE?function(){return{width:b.clientWidth,height:b.clientHeight}}:function(){return{width:a.clientWidth,height:a.clientHeight}}}({isW3C:"undefined"!=typeof window.innerWidth,isIE:"undefined"!=typeof b&&"undefined"!=typeof b.clientWidth&&0!=b.clientWidth}),getTopScroll:function(){return a.scrollTop||b.scrollTop},getTopOffset:function(a){var b=this.getViewportSize().height,c=this.getTopScroll(),d=parseInt(a,10);return angular.isUndefined(a)?c+b/5+"px":isNaN(d)?c+"px":angular.isString(a)&&"%"===a.charAt(a.length-1)?c+b*d/100+"px":c+d+"px"}}),new c}])}(angular.module("triNgDialog",["ng","ngAnimate"]));
//# sourceMappingURL=tri-angular-dialog.min.js.map