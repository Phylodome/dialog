var tri;!function(t){var e;!function(t){"use strict";!function(t){t[t.Accepted=0]="Accepted",t[t.Cancelled=1]="Cancelled",t[t.Closed=2]="Closed",t[t.Closing=3]="Closing",t[t.ClosingEsc=4]="ClosingEsc",t[t.ClosingMask=5]="ClosingMask",t[t.Open=6]="Open",t[t.Opening=7]="Opening",t[t.TemplateError=8]="TemplateError",t[t.TemplateLoaded=9]="TemplateLoaded"}(t.noty||(t.noty={}));var e=t.noty;t.conf={baseZindex:3e3,rootClass:"dialog-root",maskClass:"dialog-mask",dialogClass:"dialog",mainNamespace:"main",processTopOffset:!1,eventCore:"TriDialog",eventPrefix:"triDialog",eventOpen:"Open",eventClosing:"Closing",eventClose:"Close",eventLoaded:"Loaded",eventError:"Error",eventRequested:"Requested",eventTemplate:"Template"},t.mod=angular.module("triNgDialog",["ngAnimate"]).constant("triDialogNoty",e).constant("triDialogConfig",t.conf)}(e=t.dialog||(t.dialog={}))}(tri||(tri={}));var tri;!function(t){var e;!function(t){"use strict";t.mod.directive("triDialogMask",["$animate","triDialogConfig","triDialogManager",function(t,e,o){var i=function(i,n,r,a,l){var s=n.parent(),g=null,c=null,d=function(t){t.css("z-index",e.baseZindex+2*o.dialogs.length-1)},u=function(){o.hasAny(a.namespace)?c?d(c):c=l(function(e){t.enter(e,s,n),d(e),g&&(g.remove(),g=null)}):c&&(t.leave(c,function(){g=null}),g=c,c=null)};i.$on(a.namespace+e.eventCore+e.eventOpen,u),i.$on(a.namespace+e.eventCore+e.eventClosing,u),t.leave(c)};return{link:i,priority:100,require:"^triDialogRoot",restrict:"A",terminal:!0,transclude:"element"}}]),t.mod.directive("triDialogMask",["triDialogManager","triDialogConfig",function(e,o){var i=function(t,e,i,n){e.addClass(n.maskClass+" "+o.maskClass)},n=function(i,n,r,a){n.on("click",function(){var n=e.getUpperDialog();n&&!n.modal&&(a.broadcast(o.eventClose,{accepted:!1,dialog:n.notify(t.noty.ClosingMask),reason:"maskClick"}),i.$digest())})};return{link:{pre:i,post:n},priority:-100,require:"^triDialogRoot",restrict:"A"}}])}(e=t.dialog||(t.dialog={}))}(tri||(tri={}));var tri;!function(t){var e;!function(t){"use strict";t.mod.run(["$rootScope","$document","triDialogConfig","triDialogManager",function(e,o,i,n){o.on("keydown keypress",function(o){var r;27===o.which&&n.dialogs.length&&(r=n.getUpperDialog(),r.blockedDialog||(e.$broadcast(r.namespace+i.eventCore+i.eventClose,{accepted:!1,dialog:r.notify(t.noty.ClosingEsc),reason:"esc"}),e.$digest()))})}]),t.mod.directive("triDialogRoot",["triDialogConfig","triDialogManager",function(t,e){var o=function(t,e,o,i){return this.namespace=e.triDialogRoot||o.mainNamespace,i.registerRoot(this),t.$on("$destroy",angular.bind(this,function(){i.unRegisterRoot(this)})),angular.extend(this,{maskClass:this.namespace+"-"+o.maskClass,rootClass:this.namespace+"-"+o.rootClass,dialogs:{},broadcast:function(e,i){t.$broadcast(this.namespace+o.eventCore+e,i)},listen:function(e,i){t.$on(this.namespace+o.eventCore+e,i)}})},i=function(o,i,n,r){r.listen(t.eventOpen,function(){i.addClass(r.rootClass+" "+t.rootClass)}),r.listen(t.eventClosing,function(){e.hasAny(r.namespace)||i.removeClass(r.rootClass+" "+t.rootClass)})},n=function(t){t.append("<div tri:dialog-mask/><div tri:dialog/>")};return{controller:["$scope","$attrs","triDialogConfig","triDialogManager",o],link:i,require:"triDialogRoot",restrict:"A",template:n}}])}(e=t.dialog||(t.dialog={}))}(tri||(tri={}));var tri;!function(t){var e;!function(t){"use strict";function e(e,o,i,n,r,a,l){var s=function(s,g,c,d,u){d.listen(a.eventOpen,function(r,s){var c=function(t,e){var o=i(s.controller,{$dialog:s,$data:s.data,$scope:e});s.controllerAs&&(e[s.controllerAs]=o),t.data("$triDialogController",o)},p=function(){var t={zIndex:a.baseZindex+2*(s.label+1)};return(a.processTopOffset||null!=s.topOffset)&&(t.top=l.getTopOffset(s.topOffset)),t};u(o.$new(),function(o,i){s.controller?c(o,i):i.$dialog=s,o.data("$triDialog",s).css(p()).addClass(a.dialogClass+" "+s.dialogClass),d.dialogs[s.label]=o,n(function(){s.notify(t.noty.Opening)},1),e.enter(o,g.parent(),g,function(){s.notify(t.noty.Open)})})}),d.listen(a.eventClose,function(o,i){var n,l=i.dialog,s=d.dialogs[l.label];s&&s.data("$triDialog")===l&&(n=s.scope(),e.leave(s,function(){l.notify(t.noty.Closed),n.$destroy(),s.removeData().children().removeData(),l.destroy(i),l=s=null}),delete d.dialogs[l.label],r.unRegisterDialog(l.label),d.broadcast(a.eventClosing,l))})};return{link:s,require:"^triDialogRoot",restrict:"A",scope:!0,transclude:"element",priority:600}}function o(e,o,i,n,r){var a=function(a,l){var s=l.data("$triDialog"),g=l.data("$triDialogController");o.get(s.templateUrl,{cache:n}).success(function(e){var o;l.html(e),o=i(l.contents()),g&&l.children().data("$triDialogController",g),o(a),s.notify(t.noty.TemplateLoaded),a.$broadcast(r.eventPrefix+r.eventTemplate+r.eventLoaded)}).error(function(){a.$broadcast(r.eventPrefix+r.eventTemplate+r.eventError),s.notify(t.noty.TemplateError),e.error(new Error("triDialog: could not load template!"))}),a.$broadcast(r.eventPrefix+r.eventTemplate+r.eventRequested)};return{link:a,require:"^triDialogRoot",restrict:"A"}}e.$inject=["$animate","$rootScope","$controller","$timeout","triDialogManager","triDialogConfig","triDialogUtilities"],o.$inject=["$log","$http","$compile","$templateCache","triDialogConfig"],t.mod.directive("triDialog",o),t.mod.directive("triDialog",e)}(e=t.dialog||(t.dialog={}))}(tri||(tri={}));var tri;!function(t){var e;!function(t){"use strict";var e=function(){function t(){this.dialogs=[],this.roots={}}return t.prototype.hasAny=function(t){return this.dialogs.some(function(e){return e.namespace===t})},t.prototype.getUpperDialog=function(){var t=this.dialogs.length;return t>0&&this.dialogs[t-1]},t.prototype.registerDialog=function(t){return t.label=this.dialogs.push(t)-1,t},t.prototype.unRegisterDialog=function(t){var e=this.dialogs[t];return e&&e.label===t?(this.dialogs.splice(t,1),!0):!1},t.prototype.triggerDialog=function(t){return this.roots.hasOwnProperty(t.namespace)?(this.roots[t.namespace].broadcast(this.$_dialogConfig.eventOpen,this.registerDialog(t)),this):(this.$_$log.error(new Error("TriDialog: rootCtrl "+t.namespace+" is not registered!")),this)},t.prototype.closeDialog=function(t){return this.roots.hasOwnProperty(t.dialog.namespace)?(this.roots[t.dialog.namespace].broadcast(this.$_dialogConfig.eventClose,t),this):(this.$_$log.error(new Error("TriDialog: rootCtrl "+t.dialog.namespace+" is not registered!")),this)},t.prototype.registerRoot=function(t){return t.namespace?this.roots.hasOwnProperty(t.namespace)?(this.$_$log.error(new Error("TriDialog: rootCtrl "+t.namespace+" already registered!")),this):(this.roots[t.namespace]=t,this):(this.$_$log.error(new Error("TriDialog: rootCtrl has no namespace assigned!")),this)},t.prototype.unRegisterRoot=function(t){return this.roots.hasOwnProperty(t.namespace)?(delete this.roots[t.namespace],this):(this.$_$log.error(new Error("TriDialog: rootCtrl "+t.namespace+" is not registered!")),this)},t}();t.mod.provider("triDialogManager",["triDialogConfig",function(t){return{config:function(e){return angular.extend(t,e),this},$get:["$log","triDialogConfig",function(t,o){return angular.extend(e.prototype,{$_$log:t,$_dialogConfig:o}),new e}]}}])}(e=t.dialog||(t.dialog={}))}(tri||(tri={}));var tri;!function(t){var e;!function(t){"use strict";var e=document.body,o=document.documentElement,i={isW3C:"undefined"!=typeof window.innerWidth,isIE:"undefined"!=typeof o&&"undefined"!=typeof o.clientWidth&&0!=o.clientWidth},n=function(){function t(){}return t.prototype.getViewportSize=function(){return i.isW3C?{width:window.innerWidth,height:window.innerHeight}:i.isIE?{width:o.clientWidth,height:o.clientHeight}:{width:e.clientWidth,height:e.clientHeight}},t.prototype.getTopScroll=function(){return e.scrollTop||o.scrollTop},t.prototype.getTopOffset=function(t){var e=this.getViewportSize().height,o=this.getTopScroll(),i=parseInt(t,10);return null==t?o+e/5+"px":isNaN(i)?o+"px":angular.isString(t)&&"%"===t.charAt(t.length-1)?o+e*i/100+"px":o+i+"px"},t}();t.mod.service("triDialogUtilities",n)}(e=t.dialog||(t.dialog={}))}(tri||(tri={}));var tri;!function(t){var e;!function(t){"use strict";var e=function(){function e(t,e){angular.extend(this,{blockedDialog:!1,controller:null,controllerAs:null,dialogClass:"",topOffset:null,modal:!1,namespace:this.$_dialogConfig.mainNamespace,templateUrl:null,$_deferred:this.$_$q.defer()}),t.templateUrl||this.$_$log.error(new Error('triNgDialog.DialogData() - initialData must contain defined "templateUrl"')),angular.extend(this,t,{data:e,modal:t.blockedDialog||t.modal||this.modal,promise:this.$_deferred.promise})}return e.prototype.accept=function(t){return this.close(t,!1)},e.prototype.cancel=function(t){return this.close(t,!0)},e.prototype.close=function(e,o){return this.$_dialogManager.closeDialog({accepted:!o,dialog:this,reason:e}),null!=o&&this.notify(o===!0?t.noty.Cancelled:t.noty.Accepted),this.notify(t.noty.Closing)},e.prototype.destroy=function(t){var e;t.accepted?this.$_deferred.resolve(t.reason):this.$_deferred.reject(t.reason);for(e in this)this.hasOwnProperty(e)&&delete this[e]},e.prototype.notify=function(e){return this.$_deferred.notify({dialog:this,status:t.noty[e]}),this},e.prototype.trigger=function(){return this.$_dialogManager.triggerDialog(this),this},e}();t.mod.factory("triDialog",["$log","$q","triDialogConfig","triDialogManager",function(t,o,i,n){return angular.extend(e.prototype,{$_$log:t,$_$q:o,$_dialogConfig:i,$_dialogManager:n}),function(t,o){return new e(t,o).trigger()}}])}(e=t.dialog||(t.dialog={}))}(tri||(tri={}));
//# sourceMappingURL=../dist/tri-angular-dialog.min.js.map