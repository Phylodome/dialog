/*!
 * triAngular Dialog
 */
!function(a){"use strict";function b(a,b,c,d,e,f){var g=function(g,h,i,j,k){j.listen(e.eventOpen,function(d,g){var i=function(a,b){var d=c(g.controller,{$dialog:g,$data:g.data,$scope:b});g.controllerAs&&(b[g.controllerAs]=d),a.data("$triDialogController",d)},l=function(){var a={zIndex:e.baseZindex+2*(g.label+1)};return(e.processTopOffset||null!=g.topOffset)&&(a.top=f.getTopOffset(g.topOffset)),a};k(b.$new(),function(b,c){g.controller?i(b,c):c.$dialog=g,b.data("$triDialog",g).css(l()).addClass(e.dialogClass+" "+g.dialogClass),j.dialogs[g.label]=b,a.enter(b,h.parent(),h)})}),j.listen(e.eventClose,function(b,c){var f,g=j.dialogs[c.label];g&&g.data("$triDialog")===c&&(f=g.scope(),a.leave(g,function(){f.$destroy(),g.removeData().children().removeData(),c.destroy(),c=g=null}),delete j.dialogs[c.label],d.unRegisterDialog(c.label),j.broadcast(e.eventClosing,c))})};return{link:g,require:"^triDialogRoot",restrict:"A",scope:!0,transclude:"element",priority:600}}function c(a,b,c,d,e){var f=function(f,g){var h=g.data("$triDialog"),i=g.data("$triDialogController");b.get(h.templateUrl,{cache:d}).success(function(a){var b;g.html(a),b=c(g.contents()),i&&g.children().data("$triDialogController",i),b(f),f.$broadcast(e.eventPrefix+e.eventTemplate+e.eventLoaded)}).error(function(){f.$broadcast(e.eventPrefix+e.eventTemplate+e.eventError),a.error(new Error("triDialog: could not load template!"))}),f.$broadcast(e.eventPrefix+e.eventTemplate+e.eventRequested)};return{link:f,require:"^triDialogRoot",restrict:"A"}}a.directive("triDialogMask",["$animate","triDialogConfig","triDialogManager",function(a,b,c){var d=function(d,e,f,g,h){var i=e.parent(),j=null,k=null,l=function(a){a.css("z-index",b.baseZindex+2*c.dialogs.length-1)},m=function(){c.hasAny(g.namespace)?k?l(k):k=h(function(b){a.enter(b,i),l(b),j&&(j.remove(),j=null)}):k&&(a.leave(k,function(){j=null}),j=k,k=null)};d.$on(g.namespace+b.eventCore+b.eventOpen,m),d.$on(g.namespace+b.eventCore+b.eventClosing,m),a.leave(k)};return{link:d,priority:100,require:"^triDialogRoot",restrict:"A",terminal:!0,transclude:"element"}}]),a.directive("triDialogMask",["triDialogManager","triDialogConfig",function(a,b){var c=function(a,c,d,e){c.addClass(e.maskClass+" "+b.maskClass)},d=function(c,d,e,f){d.on("click",function(){var d=a.getUpperDialog();d&&!d.modal&&(f.broadcast(b.eventClose,d),c.$digest())})};return{link:{pre:c,post:d},priority:-100,require:"^triDialogRoot",restrict:"A"}}]),a.directive("triDialogRoot",["$rootScope","$document","triDialogConfig","triDialogManager",function(a,b,c,d){b.on("keydown keypress",function(b){var e;27===b.which&&d.dialogs.length&&(e=d.getUpperDialog(),a.$broadcast(e.namespace+c.eventCore+c.eventClose,e),a.$digest())});var e=function(a,b,c,d){return this.namespace=b.triDialogRoot||c.mainNamespace,d.registerRoot(this),a.$on("$destroy",angular.bind(this,function(){d.unRegisterRoot(this)})),angular.extend(this,{maskClass:this.namespace+"-"+c.maskClass,rootClass:this.namespace+"-"+c.rootClass,dialogs:{},broadcast:function(b,d){a.$broadcast(this.namespace+c.eventCore+b,d)},listen:function(b,d){a.$on(this.namespace+c.eventCore+b,d)}})},f=function(a,b,e,f){f.listen(c.eventOpen,function(){b.addClass(f.rootClass+" "+c.rootClass)}),f.listen(c.eventClosing,function(){d.hasAny(f.namespace)||b.removeClass(f.rootClass+" "+c.rootClass)})},g=function(a){a.append("<div tri:dialog-mask/><div tri:dialog/>")};return{controller:["$scope","$attrs","triDialogConfig","triDialogManager",e],link:f,require:"triDialogRoot",restrict:"A",template:g}}]),a.directive("triDialog",["$log","$http","$compile","$templateCache","triDialogConfig",c]),a.directive("triDialog",["$animate","$rootScope","$controller","triDialogManager","triDialogConfig","triDialogUtilities",b]),a.constant("triDialogConfig",{baseZindex:3e3,rootClass:"dialog-root",maskClass:"dialog-mask",dialogClass:"dialog",mainNamespace:"main",processTopOffset:!1,eventCore:"TriDialog",eventPrefix:"triDialog",eventOpen:"Open",eventClosing:"Closing",eventClose:"Close",eventLoaded:"Loaded",eventError:"Error",eventRequested:"Requested",eventTemplate:"Template"}),a.provider("triDialogManager",["triDialogConfig",function(a){var b=function(a,b){var c=function(){return angular.extend(this,{dialogs:[],roots:{}})};return angular.extend(c.prototype,{hasAny:function(a){return this.dialogs.some(function(b){return b.namespace===a})},getUpperDialog:function(){var a=this.dialogs.length;return a>0&&this.dialogs[a-1]},registerDialog:function(a){return a.label=this.dialogs.push(a)-1,a},unRegisterDialog:function(a){var b=this.dialogs[a];return b&&b.label===a?(this.dialogs.splice(a,1),!0):!1},triggerDialog:function(c){return this.roots.hasOwnProperty(c.namespace)?(this.roots[c.namespace].broadcast(b.eventOpen,this.registerDialog(c)),this):(a.error(new Error("TriDialog: rootCtrl "+c.namespace+" is not registered!")),this)},closeDialog:function(c){return this.roots.hasOwnProperty(c.namespace)?(this.roots[c.namespace].broadcast(b.eventClose,c),this):(a.error(new Error("TriDialog: rootCtrl "+c.namespace+" is not registered!")),this)},registerRoot:function(b){return b.namespace?this.roots.hasOwnProperty(b.namespace)?(a.error(new Error("TriDialog: rootCtrl "+b.namespace+" already registered!")),this):(this.roots[b.namespace]=b,this):(a.error(new Error("TriDialog: rootCtrl has no namespace assigned!")),this)},unRegisterRoot:function(b){return this.roots.hasOwnProperty(b.namespace)?(delete this.roots[b.namespace],this):(a.error(new Error("TriDialog: rootCtrl "+b.namespace+" is not registered!")),this)}}),new c};return{config:function(b){return angular.extend(a,b),this},$get:["$log","triDialogConfig",b]}}]),a.service("triDialogUtilities",[function(){var a=document.body,b=document.documentElement,c=function(){};return angular.extend(c.prototype,{getViewportSize:function(c){return c.isW3C?function(){return{width:window.innerWidth,height:window.innerHeight}}:c.isIE?function(){return{width:b.clientWidth,height:b.clientHeight}}:function(){return{width:a.clientWidth,height:a.clientHeight}}}({isW3C:"undefined"!=typeof window.innerWidth,isIE:"undefined"!=typeof b&&"undefined"!=typeof b.clientWidth&&0!=b.clientWidth}),getTopScroll:function(){return a.scrollTop||b.scrollTop},getTopOffset:function(a){var b=this.getViewportSize().height,c=this.getTopScroll(),d=parseInt(a,10);return angular.isUndefined(a)?c+b/5+"px":isNaN(d)?c+"px":angular.isString(a)&&"%"===a.charAt(a.length-1)?c+b*d/100+"px":c+d+"px"}}),new c}]),a.factory("triDialog",["$log","triDialogConfig","triDialogManager",function(a,b,c){var d=function(c,d){return angular.extend(this,{controller:null,controllerAs:null,dialogClass:"",topOffset:null,modal:!1,namespace:b.mainNamespace,templateUrl:null}),c.templateUrl||a.error(new Error('triNgDialog.DialogData() - initialData must contain defined "templateUrl"')),angular.extend(this,c,{data:d})};return angular.extend(d.prototype,{trigger:function(){return c.triggerDialog(this),this},close:function(){return c.closeDialog(this),this},destroy:function(){var a;for(a in this)this.hasOwnProperty(a)&&delete this[a]}}),function(a,b){return new d(a,b).trigger()}}])}(angular.module("triNgDialog",["ng","ngAnimate"]));
//# sourceMappingURL=tri-angular-dialog.min.js.map