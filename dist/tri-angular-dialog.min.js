/*!
 * triAngular Dialog
 */
!function(a){"use strict";a.directive("triDialogMask",["$animate","$rootScope","dialogConfig","dialogManager",function(a,b,c,d){var e=function(b,c,d,e){return angular.extend(this,{visible:!1,parent:null,update:function(){e.hasAny(this.namespace)?(c.css("z-index",d.baseZindex+2*e.dialogs.length-1),this.visible||(this.visible=!0,a.enter(c,this.parent,this.holder))):this.visible&&(this.visible=!1,a.leave(c))}})},f=function(a,b,d,e){var f=e[0],g=e[1];g.holder=f.holder,g.namespace=f.namespace,g.parent=b.parent(),b.addClass(f.maskClass+" "+c.maskClass)},g=function(a,c,e,f){var g=f[1];b.$on(g.namespace+".dialog.open",g.update.bind(g)),b.$on(g.namespace+".dialog.closing",g.update.bind(g)),c.on("click",function(){var a=d.getUpperDialog();a&&!a.modal&&(b.$emit(g.namespace+".dialog.close",a),b.$digest())}),c.remove()};return{controller:["$scope","$element","dialogConfig","dialogManager",e],link:{pre:f,post:g},require:["^dialogRoot","triDialogMask"],restrict:"A"}}]),a.directive("dialogRoot",["$compile","$rootScope","$document","$animate","dialogConfig","dialogManager",function(a,b,c,d,e,f){c.on("keydown keypress",function(a){var c;27===a.which&&f.dialogs.length&&(c=f.getUpperDialog(),b.$emit(c.namespace+".dialog.close",c),b.$digest())});var g=function(a,b){return this.namespace=a.dialogRoot||b.mainNamespace,angular.extend(this,{holder:null,mask:null,maskClass:this.namespace+"-"+b.maskClass,rootClass:this.namespace+"-"+b.rootClass})},h=function(c,e,g,h){var i=function(f,g){var i=angular.element('<section dialog="'+g.label+'"></section>');d.enter(i,e.addClass(h.rootClass),h.holder),a(i)(c),!b.$$phase&&b.$digest()},j=function(){!f.hasAny(h.namespace)&&e.removeClass(h.rootClass)};h.holder.after(h.mask),a(h.mask)(c),b.$on(h.namespace+".dialog.open",i),b.$on(h.namespace+".dialog.closing",j)},i=function(a,b){var c=angular.element("<!-- triNgDialog for "+b.dialogRoot+" dialog -->"),d=angular.element("<div tri:dialog-mask></div>");return a.append(c),{pre:function(a,b,e,f){f.holder=c,f.mask=d},post:h}};return{compile:i,controller:["$attrs","dialogConfig",g],require:"dialogRoot",restrict:"A"}}]),a.directive("dialog",["$rootScope","$http","$animate","$compile","$controller","$templateCache","dialogManager","dialogConfig","dialogUtilities",function(a,b,c,d,e,f,g,h,i){var j=function(){},k=function(h,i,j){var k=g.dialogs[j.dialog],l={$data:k.data,$scope:h},m=function(a){var b;k.controller&&(b=e(k.controller,l),i.data("$ngControllerController",b),i.children().data("$ngControllerController",b),k.controllerAs&&(h[k.controllerAs]=b)),a(h)};b.get(k.templateUrl,{cache:f}).success(function(a){i.html(a),m(d(i.contents())),h.$emit("$triNgDialogTemplateLoaded")}).error(function(){h.$emit("$triNgDialogTemplateError")}),h.$emit("$triNgDialogTemplateRequested"),h.closeClick=function(){a.$emit(k.namespace+".dialog.close",k)},a.$on(k.namespace+".dialog.close",function(b,d){d.label==k.label&&(c.leave(i,function(){h.$destroy()}),g.unRegisterDialog(k.label),a.$emit(k.namespace+".dialog.closing",d))})},l=function(a,b){var c=g.dialogs[b.dialog];return a.addClass(h.dialogClass+" "+c.dialogClass).css({zIndex:h.baseZindex+2*(c.label+1),top:i.getTopOffset(c.topOffset)}),{pre:j,post:k}};return{compile:l,require:"^dialogRoot",restrict:"A",scope:!0}}]),a.constant("dialogConfig",{baseZindex:3e3,rootClass:"dialog-root",maskClass:"dialog-mask",dialogClass:"dialog",mainNamespace:"main"}),a.factory("dialogData",["$log","dialogConfig",function(a,b){var c=function(){return angular.extend(this,{controller:null,controllerAs:null,dialogClass:"",topOffset:null,modal:!1,namespace:b.mainNamespace,templateUrl:null})};return angular.extend(c.prototype,{_updateDialogConfigData:function(b,c){return b.templateUrl||a.error(new Error('triNgDialog.DialogData() - initialData must contain defined "templateUrl"')),angular.extend(this,b,{data:c})}}),function(a,b){return(new c)._updateDialogConfigData(a,b)}}]),a.provider("dialogManager",["dialogConfig",function(a){var b=function(a,b,c){var d=function(){return angular.extend(this,{dialogs:[]})};return angular.extend(d.prototype,{hasAny:function(a){return this.dialogs.some(function(b){return b.namespace===a})},getUpperDialog:function(){var a=this.dialogs.length;return a>0&&this.dialogs[a-1]},registerDialog:function(a){return a.label=this.dialogs.push(a)-1,a},unRegisterDialog:function(a){var b=this.dialogs[a];return b&&b.label===a?(this.dialogs.splice(a,1),!0):!1},triggerDialog:function(d,e){return d=d||{},a.$emit((d.namespace||b.mainNamespace)+".dialog.open",this.registerDialog(c(d,e))),this}}),new d};return{config:function(b){return angular.extend(a,b),this},$get:["$rootScope","dialogConfig","dialogData",b]}}]),a.service("dialogUtilities",[function(){var a=document.body,b=document.documentElement,c=function(){};return angular.extend(c.prototype,{getViewportSize:function(c){return c.isW3C?function(){return{width:window.innerWidth,height:window.innerHeight}}:c.isIE?function(){return{width:b.clientWidth,height:b.clientHeight}}:function(){return{width:a.clientWidth,height:a.clientHeight}}}({isW3C:"undefined"!=typeof window.innerWidth,isIE:"undefined"!=typeof b&&"undefined"!=typeof b.clientWidth&&0!=b.clientWidth}),getTopScroll:function(){return a.scrollTop||b.scrollTop},getTopOffset:function(a){var b=this.getViewportSize().height,c=this.getTopScroll(),d=parseInt(a,10);return angular.isUndefined(a)?c+b/5+"px":isNaN(d)?c+"px":angular.isString(a)&&"%"===a.charAt(a.length-1)?c+b*d/100+"px":c+d+"px"}}),new c}])}(angular.module("triNgDialog",["ng","ngAnimate"]));
//# sourceMappingURL=tri-angular-dialog.min.js.map