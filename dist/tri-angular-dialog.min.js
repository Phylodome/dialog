var tri;!function(t){var e;!function(t){"use strict";t.mod=angular.module("triNgDialog",["ngAnimate"])}(e=t.dialog||(t.dialog={}))}(tri||(tri={}));var tri;!function(t){var e;!function(t){"use strict";t.mod.directive("triDialogMask",["$animate","triDialogConfig","triDialogManager",function(t,e,i){var o=function(o,r,n,a,l){var s=r.parent(),g=null,c=null,d=function(t){t.css("z-index",e.baseZindex+2*i.dialogs.length-1)},u=function(){i.hasAny(a.namespace)?c?d(c):c=l(function(e){t.enter(e,s,r),d(e),g&&(g.remove(),g=null)}):c&&(t.leave(c,function(){g=null}),g=c,c=null)};o.$on(a.namespace+e.eventCore+e.eventOpen,u),o.$on(a.namespace+e.eventCore+e.eventClosing,u),t.leave(c)};return{link:o,priority:100,require:"^triDialogRoot",restrict:"A",terminal:!0,transclude:"element"}}]),t.mod.directive("triDialogMask",["triDialogManager","triDialogConfig",function(t,e){var i=function(t,i,o,r){i.addClass(r.maskClass+" "+e.maskClass)},o=function(i,o,r,n){o.on("click",function(){var o=t.getUpperDialog();o&&!o.modal&&(n.broadcast(e.eventClose,o),i.$digest())})};return{link:{pre:i,post:o},priority:-100,require:"^triDialogRoot",restrict:"A"}}])}(e=t.dialog||(t.dialog={}))}(tri||(tri={}));var tri;!function(t){var e;!function(t){"use strict";t.mod.run(["$rootScope","$document","triDialogConfig","triDialogManager",function(t,e,i,o){e.on("keydown keypress",function(e){var r;27===e.which&&o.dialogs.length&&(r=o.getUpperDialog(),r.blockedDialog||(t.$broadcast(r.namespace+i.eventCore+i.eventClose,r),t.$digest()))})}]),t.mod.directive("triDialogRoot",["triDialogConfig","triDialogManager",function(t,e){var i=function(t,e,i,o){return this.namespace=e.triDialogRoot||i.mainNamespace,o.registerRoot(this),t.$on("$destroy",angular.bind(this,function(){o.unRegisterRoot(this)})),angular.extend(this,{maskClass:this.namespace+"-"+i.maskClass,rootClass:this.namespace+"-"+i.rootClass,dialogs:{},broadcast:function(e,o){t.$broadcast(this.namespace+i.eventCore+e,o)},listen:function(e,o){t.$on(this.namespace+i.eventCore+e,o)}})},o=function(i,o,r,n){n.listen(t.eventOpen,function(){o.addClass(n.rootClass+" "+t.rootClass)}),n.listen(t.eventClosing,function(){e.hasAny(n.namespace)||o.removeClass(n.rootClass+" "+t.rootClass)})},r=function(t){t.append("<div tri:dialog-mask/><div tri:dialog/>")};return{controller:["$scope","$attrs","triDialogConfig","triDialogManager",i],link:o,require:"triDialogRoot",restrict:"A",template:r}}])}(e=t.dialog||(t.dialog={}))}(tri||(tri={}));var tri;!function(t){var e;!function(t){"use strict";function e(t,e,i,o,r,n){var a=function(a,l,s,g,c){g.listen(r.eventOpen,function(o,a){var s=function(t,e){var o=i(a.controller,{$dialog:a,$data:a.data,$scope:e});a.controllerAs&&(e[a.controllerAs]=o),t.data("$triDialogController",o)},d=function(){var t={zIndex:r.baseZindex+2*(a.label+1)};return(r.processTopOffset||null!=a.topOffset)&&(t.top=n.getTopOffset(a.topOffset)),t};c(e.$new(),function(e,i){a.controller?s(e,i):i.$dialog=a,e.data("$triDialog",a).css(d()).addClass(r.dialogClass+" "+a.dialogClass),g.dialogs[a.label]=e,t.enter(e,l.parent(),l)})}),g.listen(r.eventClose,function(e,i){var n,a=g.dialogs[i.label];a&&a.data("$triDialog")===i&&(n=a.scope(),t.leave(a,function(){n.$destroy(),a.removeData().children().removeData(),i.destroy(),i=a=null}),delete g.dialogs[i.label],o.unRegisterDialog(i.label),g.broadcast(r.eventClosing,i))})};return{link:a,require:"^triDialogRoot",restrict:"A",scope:!0,transclude:"element",priority:600}}function i(t,e,i,o,r){var n=function(n,a){var l=a.data("$triDialog"),s=a.data("$triDialogController");e.get(l.templateUrl,{cache:o}).success(function(t){var e;a.html(t),e=i(a.contents()),s&&a.children().data("$triDialogController",s),e(n),n.$broadcast(r.eventPrefix+r.eventTemplate+r.eventLoaded)}).error(function(){n.$broadcast(r.eventPrefix+r.eventTemplate+r.eventError),t.error(new Error("triDialog: could not load template!"))}),n.$broadcast(r.eventPrefix+r.eventTemplate+r.eventRequested)};return{link:n,require:"^triDialogRoot",restrict:"A"}}e.$inject=["$animate","$rootScope","$controller","triDialogManager","triDialogConfig","triDialogUtilities"],i.$inject=["$log","$http","$compile","$templateCache","triDialogConfig"],t.mod.directive("triDialog",i),t.mod.directive("triDialog",e)}(e=t.dialog||(t.dialog={}))}(tri||(tri={}));var tri;!function(t){var e;!function(t){"use strict";var e={baseZindex:3e3,rootClass:"dialog-root",maskClass:"dialog-mask",dialogClass:"dialog",mainNamespace:"main",processTopOffset:!1,eventCore:"TriDialog",eventPrefix:"triDialog",eventOpen:"Open",eventClosing:"Closing",eventClose:"Close",eventLoaded:"Loaded",eventError:"Error",eventRequested:"Requested",eventTemplate:"Template"};t.mod.constant("triDialogConfig",e)}(e=t.dialog||(t.dialog={}))}(tri||(tri={}));var tri;!function(t){var e;!function(t){"use strict";var e=function(){function t(){this.dialogs=[],this.roots={}}return t.prototype.hasAny=function(t){return this.dialogs.some(function(e){return e.namespace===t})},t.prototype.getUpperDialog=function(){var t=this.dialogs.length;return t>0&&this.dialogs[t-1]},t.prototype.registerDialog=function(t){return t.label=this.dialogs.push(t)-1,t},t.prototype.unRegisterDialog=function(t){var e=this.dialogs[t];return e&&e.label===t?(this.dialogs.splice(t,1),!0):!1},t.prototype.triggerDialog=function(t){return this.roots.hasOwnProperty(t.namespace)?(this.roots[t.namespace].broadcast(this.$_dialogConfig.eventOpen,this.registerDialog(t)),this):(this.$_$log.error(new Error("TriDialog: rootCtrl "+t.namespace+" is not registered!")),this)},t.prototype.closeDialog=function(t){return this.roots.hasOwnProperty(t.namespace)?(this.roots[t.namespace].broadcast(this.$_dialogConfig.eventClose,t),this):(this.$_$log.error(new Error("TriDialog: rootCtrl "+t.namespace+" is not registered!")),this)},t.prototype.registerRoot=function(t){return t.namespace?this.roots.hasOwnProperty(t.namespace)?(this.$_$log.error(new Error("TriDialog: rootCtrl "+t.namespace+" already registered!")),this):(this.roots[t.namespace]=t,this):(this.$_$log.error(new Error("TriDialog: rootCtrl has no namespace assigned!")),this)},t.prototype.unRegisterRoot=function(t){return this.roots.hasOwnProperty(t.namespace)?(delete this.roots[t.namespace],this):(this.$_$log.error(new Error("TriDialog: rootCtrl "+t.namespace+" is not registered!")),this)},t}();t.mod.provider("triDialogManager",["triDialogConfig",function(t){return{config:function(e){return angular.extend(t,e),this},$get:["$log","triDialogConfig",function(t,i){return angular.extend(e.prototype,{$_$log:t,$_dialogConfig:i}),new e}]}}])}(e=t.dialog||(t.dialog={}))}(tri||(tri={}));var tri;!function(t){var e;!function(t){"use strict";var e=document.body,i=document.documentElement,o={isW3C:"undefined"!=typeof window.innerWidth,isIE:"undefined"!=typeof i&&"undefined"!=typeof i.clientWidth&&0!=i.clientWidth},r=function(){function t(){}return t.prototype.getViewportSize=function(){return o.isW3C?{width:window.innerWidth,height:window.innerHeight}:o.isIE?{width:i.clientWidth,height:i.clientHeight}:{width:e.clientWidth,height:e.clientHeight}},t.prototype.getTopScroll=function(){return e.scrollTop||i.scrollTop},t.prototype.getTopOffset=function(t){var e=this.getViewportSize().height,i=this.getTopScroll(),o=parseInt(t,10);return null==t?i+e/5+"px":isNaN(o)?i+"px":angular.isString(t)&&"%"===t.charAt(t.length-1)?i+e*o/100+"px":i+o+"px"},t}();t.mod.service("triDialogUtilities",r)}(e=t.dialog||(t.dialog={}))}(tri||(tri={}));var tri;!function(t){var e;!function(t){"use strict";var e=function(){function t(t,e){angular.extend(this,{blockedDialog:!1,controller:null,controllerAs:null,dialogClass:"",topOffset:null,modal:!1,namespace:this.$_dialogConfig.mainNamespace,templateUrl:null}),t.templateUrl||this.$_$log.error(new Error('triNgDialog.DialogData() - initialData must contain defined "templateUrl"')),t.blockedDialog&&(this.modal=!0),angular.extend(this,t,{data:e})}return t.prototype.close=function(){return this.$_dialogManager.closeDialog(this),this},t.prototype.destroy=function(){var t;for(t in this)this.hasOwnProperty(t)&&delete this[t]},t.prototype.trigger=function(){return this.$_dialogManager.triggerDialog(this),this},t}();t.mod.factory("triDialog",["$log","triDialogConfig","triDialogManager",function(t,i,o){return angular.extend(e.prototype,{$_$log:t,$_dialogConfig:i,$_dialogManager:o}),function(t,i){return new e(t,i).trigger()}}])}(e=t.dialog||(t.dialog={}))}(tri||(tri={}));
//# sourceMappingURL=../dist/tri-angular-dialog.min.js.map